<?php	include_once $rel.'globals/env.php';	function createErrorJson($usr, $no, $json_details = null){	$json_info = jsonInfoSection($usr);		if($no == 200){$json = '{"status":{"code":200,"message":"Success"}'.$json_details.''.$json_info.'}';}	if($no == 400){$json = '{"status":{"code":400,"message":"Requête invalide: erreur de paramètres."}'.$json_details.''.$json_info.'}';}	if($no == 401){$json = '{"status":{"code":401,"message":"pas d\'autorisation d\'accès à la ressource."}'.$json_details.''.$json_info.'}';}	if($no == 402){$json = '{"status":{"code":402,"message":"Vous avez dépassé votre quota de requêtes."}'.$json_details.''.$json_info.'}';}	if($no == 403){$json = '{"status":{"code":403,"message":"Problème interne dans la persistance de données."}'.$json_details.''.$json_info.'}';}	if($no == 404){$json = '{"status":{"code":404,"message":"Ressource innexistante."}'.$json_details.''.$json_info.'}';}	if($no == 405){$json = '{"status":{"code":405,"message":"Mauvaise version de base de donnée."}'.$json_details.''.$json_info.'}';}	if($no == 406){$json = '{"status":{"code":406,"message":"Operation non autorisée."}'.$json_details.''.$json_info.'}';}	return sendJson($usr, $json);}function createInsertSuccessJson($usr, $id){	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"id":'.$id.'}'.jsonInfoSection($usr).'}';	return sendJson($usr, utf8_encode($json));}function createPostCategoryJson($usr, $newcategoryid, $newcategoryname){	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"category":{"id":'.$newcategoryid.',"name":"'.$newcategoryname.'"}}'.jsonInfoSection($usr).'}';	return sendJson($usr, utf8_encode($json));}function createPostSelectionJson($usr, $newselectionid, $newselectionname){	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"selection":{"id":'.$newselectionid.',"name":"'.$newselectionname.'"}}'.jsonInfoSection($usr).'}';	return sendJson($usr, utf8_encode($json));}function createQuoteJson($usr, $quote){	if($quote == null){		return createErrorJson($usr, 404); // pas de résultats	}		$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{'.createQuoteSection($quote).'}';	$json .= jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createQuoteCommentsJson($usr, $quote, $mysql_comments, $cur_page, $comment_pages){	if($quote == null){		return createErrorJson($usr, 404); // pas de résultats	}		$env = setEnv();		$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{'.createQuoteSection($quote).',';	$json .= '"comments":[';		$cpt = 0;	while ($mysql_comments != null && $comments = mysql_fetch_array($mysql_comments, MYSQL_ASSOC)) {		if($cpt != 0){$json .= ',';} $cpt++;		$json .= '{'.createCommentSection($comments).'}';	}		$json .= '],"nbcomments":'.$cpt.',';	$json .= '"size_comment_page":'.$env['commentPageSize'].',';	$json .= '"current_comment_page":'.$cur_page.',';	$json .= '"total_comment_pages":'.$comment_pages.'}'.jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createCommentsJson($usr, $mysql_comments, $cur_page, $comment_pages){	$env = setEnv();		$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{';	$json .= '"comments":[';		$cpt = 0;	while ($mysql_comments != null && $comments = mysql_fetch_array($mysql_comments, MYSQL_ASSOC)) {		if($cpt != 0){$json .= ',';} $cpt++;		$json .= '{'.createCommentSection($comments).'}';	}		$json .= '],"nbcomments":'.$cpt.',';	$json .= '"size_comment_page":'.$env['commentPageSize'].',';	$json .= '"current_comment_page":'.$cur_page.',';	$json .= '"total_comment_pages":'.$comment_pages.'}'.jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createListQuoteJson($usr, $mysql_result, $cur_page, $pages, $json_details = null){	if($mysql_result == null){		return createErrorJson($usr, 404); // pas de résultats	}		$env = setEnv();	$json = '{"status":{"code":200,"message":"Success"},';		$json .= '"response":{"quotes":[';				$cpt = 0;		while ($mysql_result != null && $quote = mysql_fetch_array($mysql_result, MYSQL_ASSOC)) {			if($cpt != 0){$json .= ',';} $cpt++;			$json .= '{'.createQuoteSection($quote).'}';					}				$json .= '],"nbquotes":'.$cpt.',';		$json .= '"size_quote_page":'.$env['quotePageSize'].',';		$json .= '"current_quote_page":'.$cur_page.',';		$json .= '"total_quote_pages":'.$pages;		$json .= $json_details.'}';	$json .= jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createCategoriesJson($usr, $categories_result, $cur_page, $pages){	if($categories_result == null){		return createErrorJson($usr, 404); // pas de résultats	}		$env = setEnv();	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"categories":[';		$cpt = 0;	while ($categories_result != null && $category = mysql_fetch_array($categories_result, MYSQL_ASSOC)) {		if($cpt != 0){$json .= ',';} $cpt++;		$json .= '{'.createCategorySection($category).'}';			}		$json .= '],"nbcategories":'.$cpt.',';	$json .= '"size_category_page":'.$env['categoryPageSize'].',';	$json .= '"current_category_page":'.$cur_page.',';	$json .= '"total_category_pages":'.$pages.'}'.jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createSelectionsJson($usr, $selections_result, $cur_page, $pages){	if($selections_result == null){		return createErrorJson($usr, 404); // pas de résultats	}		$env = setEnv();	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"selections":[';		$cpt = 0;	while ($selections_result != null && $category = mysql_fetch_array($selections_result, MYSQL_ASSOC)) {		if($cpt != 0){$json .= ',';} $cpt++;		$json .= '{'.createSelectionSection($category).'}';	}		$json .= '],"nbselections":'.$cpt.',';	$json .= '"size_selection_page":'.$env['selectionPageSize'].',';	$json .= '"current_selection_page":'.$cur_page.',';	$json .= '"total_selection_pages":'.$pages.'}'.jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createSuiviJson($usr, $mail, $suivi_result){	if($suivi_result == null){		return createErrorJson($usr, 404); // pas de résultats	}	$json = '{"status":{"code":200,"message":"Success"},';	$json .= '"response":{"mail":"'.$mail.'","suivis":[';		$cpt = 0;	while ($suivi_result != null && $suivi = mysql_fetch_array($suivi_result, MYSQL_ASSOC)) {		if($suivi['new_comments'] == 1){			if($cpt != 0){$json .= ',';} $cpt++;			$json .= '{"quote_id":"'.$suivi['quote_id'].'","new_comments":"'.$suivi['new_comments'].'"}';		}	}		$json .= '],"total_suivis":'.$cpt.'}'.jsonInfoSection($usr).'}';		return sendJson($usr, utf8_encode($json));}function createParamsJson($usr){	$env = setEnv();	$json = '{';		$json .= '"status":{"code":200,"message":"Success"},';		$json .= '"response":{';			$json .= '"textMaxSize":{';				$json .= '"quote":"'.$env['quoteMaxSize'].'",';				$json .= '"comment":"'.$env['commentMaxSize'].'",';				$json .= '"source":"'.$env['sourceMaxSize'].'",';				$json .= '"context":"'.$env['contextMaxSize'].'",';				$json .= '"explanation":"'.$env['explanationMaxSize'].'",';				$json .= '"author":"'.$env['authorMaxSize'].'",';				$json .= '"publisher":"'.$env['publisherMaxSize'].'",';				$json .= '"publisher_info":"'.$env['publisherInfoMaxSize'].'",';				$json .= '"mail":"'.$env['mailMaxSize'].'",';				$json .= '"site":"'.$env['siteMaxSize'].'",';				$json .= '"category":"'.$env['categoryMaxSize'].'",';				$json .= '"selection":"'.$env['selectionMaxSize'].'",';				$json .= '"tag":"'.$env['tagMaxSize'].'"';			$json .= '}';		$json .= '}';		$json .= jsonInfoSection($usr);	$json .= '}';	return sendJson($usr, $json);}// privatefunction jsonInfoSection($usr){	if(isset($usr['reqLeft'])){		return ',"info":{"remaining_queries":'.$usr['reqLeft'].',"next_restart":'.$usr['nextReset'].'}';	}	else{		return '';	}}// privatefunction createQuoteSection($quote){	$section = "";	$section = '"id":'.$quote['id'].',';	$section .= '"post_timestamp":"'.dateFormat($quote['post_timestamp']).'",';	$section .= '"post_date":"'.dateFormat($quote['post_date']).'",';	$section .= '"quote":"'.jsonFormat($quote['quote']).'",';	$section .= '"source":"'.jsonFormat($quote['source']).'",';	$section .= '"context":"'.jsonFormat($quote['context']).'",';	$section .= '"explanation":"'.jsonFormat($quote['explanation']).'",';	$section .= '"author":"'.jsonFormat($quote['author']).'",';	$section .= '"publisher":"'.jsonFormat($quote['publisher']).'",';	$section .= '"publisher_info":"'.jsonFormat($quote['publisher_info']).'",';	$section .= '"site":"'.jsonFormat($quote['site']).'",';	$section .= '"category":"'.jsonFormat($quote['category']).'",';	$section .= '"category_id":"'.$quote['category_id'].'",';	$section .= '"up":'.$quote['vote_up'].',';	$section .= '"down":'.$quote['vote_down'].',';	$section .= '"total_comments":'.$quote['comments'];	return $section;}// privatefunction createCommentSection($comment){	$section = "";	$section = '"id":'.$comment['id'].',';	$section .= '"post_timestamp":"'.dateFormat($comment['post_timestamp']).'",';	$section .= '"post_date":"'.dateFormat($comment['post_date']).'",';	$section .= '"publisher":"'.jsonFormat($comment['publisher']).'",';	$section .= '"site":"'.jsonFormat($comment['site']).'",';	$section .= '"comment":"'.jsonFormat($comment['comment']).'",';	$section .= '"up":'.$comment['vote_up'].',';	$section .= '"down":'.$comment['vote_down'].',';	$section .= '"reported":'.$comment['reported'];	return $section;}// privatefunction createCategorySection($category){	$section = "";	$section = '"id":'.$category['id'].',';	$section .= '"post_timestamp":"'.dateFormat($category['post_timestamp']).'",';	$section .= '"post_date":"'.dateFormat($category['post_date']).'",';	$section .= '"name":"'.jsonFormat($category['name']).'"';	return $section;}// privatefunction createSelectionSection($selection){	$section = "";	$section = '"id":'.$selection['id'].',';	$section .= '"post_timestamp":"'.dateFormat($selection['post_timestamp']).'",';	$section .= '"post_date":"'.dateFormat($selection['post_date']).'",';	$section .= '"name":"'.jsonFormat($selection['name']).'"';	return $section;}// privatefunction sendJson($usr, $json){	if(!isset($usr['noheaders']) || $usr['noheaders'] != 1){		header('Cache-Control: no-cache, must-revalidate');		header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');		header('Content-type: application/json; charset=utf-8');	}		if(isset($usr['format']) && $usr['format'] == 'jsonp'){		header('Content-type: text/javascript; charset=utf-8');		$json = $usr['callback'].'('.$json.');';	}		return $json;}// privatefunction jsonFormat($str){	$str = str_replace("\'", "'", $str);	$str = str_replace('\"', '"', $str);	$str = str_replace('"', '\"', $str);	$str = preg_replace("((\r\n))", '\n', $str); // IMPORTANT pour autoriser les sauts de ligne !	$str = strip_tags($str);	$str = trim($str);	return $str;}// privatefunction dateFormat($date){	$date = str_replace("|", utf8_decode(" à "), $date);	$date = substr($date, 0, -3); // suppression des secondes	return $date;}?>